user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream backend {
        server localhost:8080;
    }

    server {
        listen       80;
        listen       [::]:80;
        # server_name  _;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        
        root /var/www/clouddisk/static;
        
        # serve static files
        # internal redirect from / to /index.html
        location / {
        }

        # restricted to only logged users
        location = /index.html {
            auth_request /auth;
            # tell client to redirect on 401
            # it's also possible to construct the redirect URL manually
            error_page 401 = @login_required;
        }
        location @login_required {
            return 302 /login.html;
        }

        # APIs handled by python backend
        location ~ ^/(signup|login|logout|auth|files) {
            proxy_pass http://backend;
        }

        # websocket proxy
        location /ws {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        # handle requests redirected by the “X-Accel-Redirect” response header field from an upstream server;
        location /download {
            internal;
            alias /var/wwww/clouddisk/files;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}

